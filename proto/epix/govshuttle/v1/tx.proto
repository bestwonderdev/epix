syntax = "proto3";
package epix.govshuttle.v1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "epix/govshuttle/v1/govshuttle.proto";

option go_package = "github.com/EpixZone/epix/v8/x/govshuttle/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // LendingMarketProposal append the lending market proposal of the
  // x/govshuttle module.
  rpc LendingMarketProposal(MsgLendingMarketProposal)
      returns (MsgLendingMarketProposalResponse);

  // TreasuryProposal append the treasury proposal of the x/govshuttle module.
  rpc TreasuryProposal(MsgTreasuryProposal)
      returns (MsgTreasuryProposalResponse);
}

message MsgLendingMarketProposal {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  option (amino.name) = "epix/MsgLendingMarketProposal";

  option (gogoproto.equal) = false;

  string title = 2;
  string description = 3;

  LendingMarketMetadata metadata = 4;
  // NOTE: All parameters must be supplied.
}

message MsgLendingMarketProposalResponse {}

message MsgTreasuryProposal {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  option (amino.name) = "epix/MsgTreasuryProposal";

  option (gogoproto.equal) = false;

  string title = 2;
  string description = 3;

  TreasuryProposalMetadata metadata = 4;
  // NOTE: All parameters must be supplied.
}

message MsgTreasuryProposalResponse {}